/*
** Copyright Â© Bart Kampers
*/

package randd.motormanagement.swing;

import java.util.*;
import randd.motormanagement.communication.RemoteSystem;
import randd.motormanagement.system.Notification;


public class StatusPanel extends javax.swing.JPanel {


    public StatusPanel() {
        initComponents();
    }
    
    
    void setRemoteSystem(RemoteSystem remoteSystem) {
        remoteSystem.addListener(remoteSystemListener);        
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tableScrollPane = new javax.swing.JScrollPane();
        notificationTable = new javax.swing.JTable();

        notificationTable.setModel(new Model());
        tableScrollPane.setViewportView(notificationTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 543, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    private class RemoteSystemListener implements RemoteSystem.Listener {

        @Override
        public void notificationReceived(Notification notification) {
            notifications.add(notification);
            ((Model) notificationTable.getModel()).fireTableStructureChanged();
        }
        
    }

    
    private class Model extends javax.swing.table.DefaultTableModel {
        
        @Override        
        public int getColumnCount() {
            return titles.length;
        }

        @Override        
        public int getRowCount() {
            return notifications.size();
        }
        
        @Override
        public String getColumnName(int column) {
            return titles[column];
        }
        
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
        
        @Override
        public Object getValueAt(int row, int column) {
            Notification notification = notifications.get(row);
            switch (column) {
                case TIMESTAMP_COLUMN: return dateFormat.format(new Date(notification.getTimestamp()));
                case NAME_COLUMN: return notification.getName();
                case VALUE_COLUMN: return notification.getValue();
                default: return null;
            }
        }
        
        final java.text.DateFormat dateFormat = new java.text.SimpleDateFormat("HH:mm:ss.SSS");
        
    }
    
    
    private final RemoteSystemListener remoteSystemListener = new RemoteSystemListener();
    
    private final List<Notification> notifications = Collections.synchronizedList(new ArrayList<Notification>());
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable notificationTable;
    private javax.swing.JScrollPane tableScrollPane;
    // End of variables declaration//GEN-END:variables

    private static final String[] titles = { 
        Bundle.getInstance().get("Time"), 
        Bundle.getInstance().get("Name"),
        Bundle.getInstance().get("Value")
};
    
    private static final int TIMESTAMP_COLUMN = 0;
    private static final int NAME_COLUMN = 1;
    private static final int VALUE_COLUMN = 2;
    
}
