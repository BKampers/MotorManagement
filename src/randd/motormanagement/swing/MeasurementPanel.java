/*
** Copyright Â© Bart Kampers
*/

package randd.motormanagement.swing;


import java.awt.Color;
import randd.motormanagement.system.*;


public class MeasurementPanel extends javax.swing.JPanel {
    
    
    public interface Listener {
        public void simulationEnabled(Measurement measurement, boolean enabled);
        public void simulationValueModified(Measurement measurement, double value);
    }
    
    
    public MeasurementPanel(Measurement measurement, Listener listener) {
        this.listener = listener;
        initComponents();
        setMeasurement(measurement);
    }
    
    
    private void setMeasurement(Measurement measurement) {
        this.measurement = measurement;
        measurement.addListener(measurementListener);
        if (measurement.getName() != null) {
            nameLabel.setText(measurement.getName());
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nameLabel = new javax.swing.JLabel();
        valueTextField = new javax.swing.JTextField();
        unitLabel = new javax.swing.JLabel();
        simulationToggleButton = new javax.swing.JToggleButton();

        setPreferredSize(new java.awt.Dimension(250, 30));

        nameLabel.setPreferredSize(new java.awt.Dimension(50, 25));
        add(nameLabel);

        valueTextField.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        valueTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        valueTextField.setEnabled(false);
        valueTextField.setPreferredSize(new java.awt.Dimension(50, 25));
        valueTextField.setDisabledTextColor(LIME_GREEN);
        valueTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valueTextField_actionPerformed(evt);
            }
        });
        add(valueTextField);

        unitLabel.setPreferredSize(new java.awt.Dimension(50, 25));
        add(unitLabel);

        simulationToggleButton.setText("Sim");
        simulationToggleButton.setPreferredSize(new java.awt.Dimension(50, 25));
        simulationToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simulationToggleButton_actionPerformed(evt);
            }
        });
        add(simulationToggleButton);
    }// </editor-fold>//GEN-END:initComponents

    
    private void simulationToggleButton_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simulationToggleButton_actionPerformed
        boolean enabled = simulationToggleButton.isSelected();
        valueTextField.setEnabled(enabled);
        listener.simulationEnabled(measurement, enabled);
    }//GEN-LAST:event_simulationToggleButton_actionPerformed

    
    private void valueTextField_actionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valueTextField_actionPerformed
        try {
            java.text.NumberFormat numberFormat = java.text.NumberFormat.getNumberInstance();
            double value = numberFormat.parse(valueTextField.getText()).doubleValue();
            listener.simulationValueModified(measurement, value);
            valueTextField.setBackground(Color.WHITE);
        }
        catch (java.text.ParseException ex) {
            valueTextField.setBackground(Color.RED);
        }
    }//GEN-LAST:event_valueTextField_actionPerformed

    
    private class MeasurementListener implements Measurement.Listener {

        public void valueUpdated() {
            Float value = measurement.getValue();
            if (! simulationToggleButton.isSelected() && value != null) {
                try {
                    java.util.Formatter formatter = new java.util.Formatter();
                    formatter.format(measurement.getFormat(), value);
                    valueTextField.setText(formatter.toString());
                }
                catch (Exception ex) {
                    valueTextField.setText(Long.toString(value.longValue()));
                }
            }
        }
        
        public void simulationUpdated() {
        }
    
    }    

    
    private final Listener listener;
    private Measurement measurement;

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel nameLabel;
    private javax.swing.JToggleButton simulationToggleButton;
    private javax.swing.JLabel unitLabel;
    private javax.swing.JTextField valueTextField;
    // End of variables declaration//GEN-END:variables


    private final MeasurementListener measurementListener = new MeasurementListener();
    
    private static final Color LIME_GREEN = new java.awt.Color(50, 205, 50);
    
}
